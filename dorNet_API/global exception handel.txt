



		public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else{
                app.UseExceptionHandler( builde => {
                    builde.Run(async context =>{
                        context.Response.StatusCode = (int)HttpStatusCode.InternalServerError;

                        var error = context.Features.Get<IExceptionHandlerFeature>();

                        if(error != null)
                        {
                            context.Response.AddApplicationError(error.Error.Message);
                            await context.Response.WriteAsync(error.Error.Message);
                        }
                    });
                });
            }
			
			
		public static class Extensions
		{
			public static void AddApplicationError(this HttpResponse response, string message)
			{
				response.Headers.Add("Application-Error", message);
				response.Headers.Add("Access-Contol-Expose-Headers","Application-Error");
				response.Headers.Add("Access-Contol-Allow-Origin","*");
			}
        }